name: Reusable workflow to check organization standards

on: [push, pull_request]


jobs:
  validate-name:
    runs-on: ubuntu-latest
    steps:
    - name: Check repository name
      uses: actions/github-script@v5
      with:
        script: |
          const { repo } = context.repo;

          if (repo.includes('_')) {
            core.setFailed("Repository name contains underscores (_). Please remove them and use dashes (-) instead.");
          }

    - name: Check repository visibility
      uses: actions/github-script@v5
      with:
        script: |
          const { owner,repo } = context.repo;
          const repoDetails = await github.rest.repos.get({ owner,repo })

          if (repoDetails.data.private){
            core.setFailed("Repository is private, please make it public");
          }
      if: always()


    - name: Check repository description
      uses: actions/github-script@v5
      with:
        script: |
          const { owner, repo } = context.repo;
          const repoDetails = await github.rest.repos.get({ owner, repo });

          if (!repoDetails.data.description) {
            core.setFailed("The repository does not have a description, please add one.");
          }
      if: always()

    - name: Check branch protection
      uses: actions/github-script@v5
      with:
        script: |
          const { owner, repo } = context.repo;

          try {
            await github.rest.repos.getBranchProtection({
              owner,
              repo,
              branch: 'main'
            });
          } catch (error) {
            if (error.status === 404) {
              core.setFailed("Error: The main branch is not protected, ");
            }
          }
      if: always()

    - name: Check repository license
      uses: actions/github-script@v5
      with:
        script: |
          const { owner, repo } = context.repo;
          const repoDetails = await github.rest.repos.get({ owner, repo });

          if (!repoDetails.data.license) {
            core.setFailed("The repository does not have a license, please add one.");
          }
      if: always()